---
- name: Check for existing Microsoft keyring
  stat:
    path: "{{ item }}"
  loop:
    - /usr/share/keyrings/microsoft.gpg
    - /usr/share/keyrings/packages.microsoft.gpg
  register: keyring_check

- name: Set Microsoft keyring path
  set_fact:
    microsoft_keyring: "{{ keyring_check.results | selectattr('stat.exists') | map(attribute='item') | first | default('/usr/share/keyrings/packages.microsoft.gpg') }}"

- name: Add Microsoft GPG key
  become: true
  block:
    - name: Download Microsoft GPG key
      get_url:
        url: https://packages.microsoft.com/keys/microsoft.asc
        dest: /tmp/microsoft.asc

    - name: Convert GPG key
      shell: |
        cat /tmp/microsoft.asc | gpg --dearmor > {{ microsoft_keyring }}
      args:
        creates: "{{ microsoft_keyring }}"

    - name: Set permissions on Microsoft keyring
      file:
        path: "{{ microsoft_keyring }}"
        mode: '0644'
      when: not ansible_check_mode

- name: Add VSCode repository
  become: true
  apt_repository:
    repo: "deb [arch=amd64,arm64,armhf signed-by={{ microsoft_keyring }}] https://packages.microsoft.com/repos/code stable main"
    state: present
    filename: vscode

- name: Install Visual Studio Code
  become: true
  apt:
    name: code
    state: present
    update_cache: yes
  when: not ansible_check_mode

- name: Install VSCode extensions
  shell: code --install-extension {{ item }}
  when: not ansible_check_mode
  loop:
    - ms-azuretools.vscode-docker
    - ms-iot.vscode-ros
    - ms-python.debugpy
    - ms-python.python
    - ms-python.vscode-pylance
    - ms-vscode.cmake-tools
    - ms-vscode.cpptools
    - ms-vscode.cpptools-extension-pack
    - ms-vscode-remote.remote-containers
    - oderwat.indent-rainbow
    - robbowen.synthwave-vscode
    - analytic-signal.preview-pdf
  register: extension_result
  changed_when: "'was successfully installed' in extension_result.stdout"
  failed_when:
    - extension_result.rc != 0
    - "'already installed' not in extension_result.stdout"
    - "'already installed' not in extension_result.stderr"

- name: Configure VSCode settings
  block:
    - name: Ensure VSCode config directory exists
      file:
        path: "{{ ansible_env.HOME }}/.config/Code/User"
        state: directory
        mode: '0755'

    - name: Write VSCode settings
      copy:
        content: |
          {
            "workbench.colorTheme": "SynthWave '84",
            "python.defaultInterpreterPath": "/bin/python",
            "workbench.sideBar.location": "right"
          }
        dest: "{{ ansible_env.HOME }}/.config/Code/User/settings.json"
        mode: '0644'